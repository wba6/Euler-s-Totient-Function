name: Convert Markdown to PDF and Commit

# Define the permissions for GITHUB_TOKEN
permissions:
  contents: write  # Grants read and write access to repository contents

on:
  push:
    branches:
      - main
    paths:
      - 'Deep-Dive.md'
      - '.github/workflows/convert-markdown-to-pdf.yml'
      - 'scripts/fix_markdown.sh'  # Include the fix script in the watch paths

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures full history is fetched

      # 2. Set Up Git User
      - name: Set up Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 3. Configure GitHub Token for Pushing
      - name: Configure GitHub Token
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      # 4. Verify Markdown Fix Script
      - name: Verify Markdown Fix Script
        run: |
          ls -la scripts/
          cat scripts/fix_markdown.sh

      # 5. Fix Markdown Formatting
      - name: Fix Markdown Formatting
        run: |
          chmod +x scripts/fix_markdown.sh
          scripts/fix_markdown.sh -b Deep-Dive.md

      # 6. Commit and Push Markdown Fixes
      - name: Commit and Push Markdown Fixes
        run: |
          # Check if Deep-Dive.md was modified
          if git diff --quiet Deep-Dive.md; then
            echo "No Markdown fixes needed."
          else
            git add Deep-Dive.md
            git commit -m "Fix Markdown formatting in Deep-Dive.md"
            git push origin main
          fi

      # 7. Print GITHUB_WORKSPACE for Debugging (Optional)
      - name: Print GITHUB_WORKSPACE
        run: echo "GITHUB_WORKSPACE is $GITHUB_WORKSPACE"

      # 8. List Workspace Contents Before Conversion (Optional)
      - name: List Workspace Contents Before Conversion
        run: ls -la $GITHUB_WORKSPACE

      # 9. Convert Markdown to PDF Using Docker
      - name: Convert Markdown to PDF
        id: convert-to-pdf
        uses: addnab/docker-run-action@v3
        with:
          image: pandoc/latex:2.19  # Specify a specific version for consistency
          options: -v ${{ github.workspace }}:/github/workspace  # Explicitly mount the workspace
          run: |
            echo "Listing workspace contents inside Docker before conversion:"
            ls -la /github/workspace
            # Create 'pdf' directory inside the workspace
            mkdir -p /github/workspace/pdf
            echo "Listing workspace contents after creating pdf directory:"
            ls -la /github/workspace/pdf
            # Convert Markdown to PDF
            pandoc /github/workspace/Deep-Dive.md -o /github/workspace/pdf/Deep-Dive.pdf --pdf-engine=xelatex

      # 10. List Workspace Contents After Conversion (Optional)
      - name: List Workspace Contents After Conversion
        run: ls -la $GITHUB_WORKSPACE/pdf

      # 11. Commit and Push PDF
      - name: Commit and Push PDF
        run: |
          # Check if pdf/Deep-Dive.pdf was modified
          if git diff --quiet pdf/Deep-Dive.pdf; then
            echo "No PDF updates needed."
          else
            git add pdf/Deep-Dive.pdf
            git commit -m "Update Deep-Dive.pdf"
            git push origin main
          fi

    outputs:
      pdf-generated: ${{ steps.convert-to-pdf.outcome == 'success' }}
