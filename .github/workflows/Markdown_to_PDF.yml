name: Convert Markdown to PDF and Commit

# Define the permissions for GITHUB_TOKEN
permissions:
  contents: write  # Grants read and write access to repository contents

on:
  push:
    branches:
      - main
    paths:
      - 'Deep-Dive.md'
      - '.github/workflows/convert-markdown-to-pdf.yml'
      - 'scripts/fix_markdown.sh'  # Include the fix script in the watch paths

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures full history is fetched

      # 2. Set Up Git User
      - name: Set up Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 3. Configure GitHub Token for Pushing
      - name: Configure GitHub Token
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      # 4. Fix Markdown Formatting
      - name: Fix Markdown Formatting
        run: |
          chmod +x scripts/fix_markdown.sh
          scripts/fix_markdown.sh -b Deep-Dive.md

      # 5. Commit and Push Markdown Fixes
      - name: Commit and Push Markdown Fixes
        run: |
          # Check if Deep-Dive.md was modified
          if git diff --quiet Deep-Dive.md; then
            echo "No Markdown fixes needed."
          else
            git add Deep-Dive.md
            git commit -m "Fix Markdown formatting in Deep-Dive.md"
            git push origin main
          fi

      # 6. Retrieve UID and GID
      - name: Get UID and GID
        id: get_ids
        run: |
          echo "uid=$(id -u)" >> $GITHUB_OUTPUT
          echo "gid=$(id -g)" >> $GITHUB_OUTPUT

      # 7. Change Ownership of Workspace
      - name: Change Ownership of Workspace
        run: |
          sudo chown -R ${{ steps.get_ids.outputs.uid }}:${{ steps.get_ids.outputs.gid }} /github/workspace

      # 8. Convert Markdown to PDF Using Docker
      - name: Convert Markdown to PDF
        id: convert-to-pdf
        uses: addnab/docker-run-action@v3
        with:
          image: pandoc/latex:latest  # Use an image with LaTeX installed
          options: --user ${{ steps.get_ids.outputs.uid }}:${{ steps.get_ids.outputs.gid }}
          run: |
            echo "Listing workspace contents before conversion:"
            ls -la /github/workspace
            mkdir -p pdf
            echo "Listing workspace contents after creating pdf directory:"
            ls -la /github/workspace/pdf
            pandoc Deep-Dive.md -o pdf/Deep-Dive.pdf --pdf-engine=xelatex

      # 9. Commit and Push PDF
      - name: Commit and Push PDF
        run: |
          # Check if pdf/Deep-Dive.pdf was modified
          if git diff --quiet pdf/Deep-Dive.pdf; then
            echo "No PDF updates needed."
          else
            git add pdf/Deep-Dive.pdf
            git commit -m "Update Deep-Dive.pdf"
            git push origin main
          fi

    outputs:
      pdf-generated: ${{ steps.convert-to-pdf.outcome == 'success' }}
